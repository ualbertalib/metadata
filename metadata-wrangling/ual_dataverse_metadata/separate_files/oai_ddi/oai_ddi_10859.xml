<codeBook xmlns="ddi:codebook:2_5" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="ddi:codebook:2_5 https://ddialliance.org/Specification/DDI-Codebook/2.5/XMLSchema/codebook.xsd" version="2.5"><docDscr><citation><titlStmt><titl>Just-in-Time Static Analysis</titl><IDNo agency="DOI">doi:10.7939/DVN/10859</IDNo></titlStmt><distStmt><distrbtr source="archive">UAL Dataverse</distrbtr><distDate>2016-08-25</distDate></distStmt><verStmt source="DVN"><version date="2016-08-25" type="RELEASED">1</version></verStmt><biblCit>Nguyen, Lisa; Ali, Karim; Livshits, Ben; Bodden, Eric; Smith, Justin; Murphy-Hill, Emerson, 2016, "Just-in-Time Static Analysis", https://doi.org/10.7939/DVN/10859, UAL Dataverse, V1</biblCit></citation></docDscr><stdyDscr><citation><titlStmt><titl>Just-in-Time Static Analysis</titl><IDNo agency="DOI">doi:10.7939/DVN/10859</IDNo></titlStmt><rspStmt><AuthEnty affiliation="Fraunhofer IEM">Nguyen, Lisa</AuthEnty><AuthEnty affiliation="University of Alberta">Ali, Karim</AuthEnty><AuthEnty affiliation="Microsoft Research">Livshits, Ben</AuthEnty><AuthEnty affiliation="Paderborn University and Fraunhofer IEM">Bodden, Eric</AuthEnty><AuthEnty affiliation="North Carolina State University">Smith, Justin</AuthEnty><AuthEnty affiliation="North Carolina State University">Murphy-Hill, Emerson</AuthEnty></rspStmt><prodStmt><producer affiliation="Fraunhofer IEM">Lisa Nguyen</producer><prodDate>2016-08</prodDate></prodStmt><distStmt><distrbtr source="archive">UAL Dataverse</distrbtr><distrbtr affiliation="Fraunhofer IEM">Lisa Nguyen</distrbtr><contact affiliation="Fraunhofer IEM" email="lisa.nguyen@iem.fraunhofer.de">Lisa Nguyen</contact><distDate>2016-08</distDate><depDate>2016-08-25</depDate></distStmt></citation><stdyInfo><subject><keyword>static analysis</keyword><keyword>just-in-time</keyword><keyword>taint analysis</keyword><keyword>android</keyword><keyword>analysis tools</keyword></subject><abstract date="2016-08">We present the concept of Just-In-Time (JIT) static analysis that interleaves code development and bug fixing in an integrated development environment. Unlike traditional static analysis tools, a JIT analysis tool presents warnings to code developers over time, providing the most relevant results quickly, and computing less relevant results incrementally later. We describe general guidelines for designing JIT analyses. We also present a general recipe for turning static data- flow analyses into JIT analyses through a concept of layered analysis execution illustrated through Cheetah, a JIT taint analysis for Android applications. Our empirical evaluation of Cheetah on real-world applications shows that our approach returns warnings quickly enough to avoid disrupting a developerâ€™s workflow, a finding confirmed by developers in our user study.</abstract><sumDscr/></stdyInfo><method><dataColl><sources/></dataColl><anlyInfo/></method><dataAccs><setAvail/><useStmt/></dataAccs><othrStdyMat/></stdyDscr><otherMat ID="f6728" URI="https://dataverse.library.ualberta.ca/api/access/datafile/6728" level="datafile"><labl>jit.pdf</labl><txt>Just-in-Time Static Analysis</txt><notes level="file" type="DATAVERSE:CONTENTTYPE" subject="Content/MIME Type">application/pdf</notes></otherMat></codeBook>